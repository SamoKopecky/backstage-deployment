# Base config

app:
  title: Operate First Cloud
  baseUrl: http://localhost:7007
  support:
    url: https://github.com/operate-first/support/issues
    items:  # Used by common SupportButton component
      - icon: github
        title: Issues
        links:
          - url: https://github.com/backstage/backstage/issues
            title: GitHub Issues
      - title: Slack Chatroom
        icon: chat
        links:
          - url: https://join.slack.com/t/operatefirst/shared_invite/zt-o2gn4wn8-O39g7sthTAuPCvaCNRnLww
            title: '#support'

organization:
  name: Operate First Cloud

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/tutorials/backend-to-backend-auth for
  # information on the format
  auth:
    keys:
      - secret: ${backend_secret}
  baseUrl: http://localhost:7007
  listen: 0.0.0.0:7007
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:7007
    methods: [GET, POST, PUT, DELETE]
    credentials: true
  # This is for local developement only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  cache:
    store: memory
    # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir
#   workingDirectory: /tmp

integrations:
  github:
#     - host: github.com
#       This is a Personal Access Token or PAT from GitHub. You can find out how to generate this token, and more information
#       about setting up the GitHub integration here: https://backstage.io/docs/getting-started/configuration#setting-up-a-github-integration
#       token: ${GITHUB_TOKEN}

#     Example for how to add your GitHub Enterprise instance using the API:
#     - host: ghe.example.net
#       apiBaseUrl: https://ghe.example.net/api/v3
#       token: ${GHE_TOKEN}

# proxy:
#   '/test':
#     target: 'https://example.com'
#     changeOrigin: true

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local'  # Alternatives - 'external'
  generator:
    runIn: 'docker'  # Alternatives - 'local'
  publisher:
    type: 'local'  # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

# see https://backstage.io/docs/auth/ to learn about auth providers
auth:
  providers: {}
  # environment: production
  # providers:
  #   production:
  #     github:
  #       clientId: ${AUTH_GITHUB_CLIENT_ID}
  #       clientSecret: ${AUTH_GITHUB_CLIENT_SECRET}
  #       uncomment if using GitHub Enterprise
  #       enterpriseInstanceUrl: ${AUTH_GITHUB_ENTERPRISE_INSTANCE_URL}


# see https://backstage.io/docs/features/software-templates/configuration for software template options
scaffolder:

catalog:
  rules:
    - allow:
        - Component
        - System
        - Location
        - User
        - Group
  locations:
    - type: url
      target: https://github.com/SamoKopecky/apps/blob/master/service-catalog/all.yaml
